// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.5
// source: pkg/portstore/portstore.proto

package grpcmodel

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId string `protobuf:"bytes,1,opt,name=portId,proto3" json:"portId,omitempty"`
}

func (x *PortReq) Reset() {
	*x = PortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_portstore_portstore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortReq) ProtoMessage() {}

func (x *PortReq) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_portstore_portstore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortReq.ProtoReflect.Descriptor instead.
func (*PortReq) Descriptor() ([]byte, []int) {
	return file_pkg_portstore_portstore_proto_rawDescGZIP(), []int{0}
}

func (x *PortReq) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

type OptionalPortResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *OptionalPortResp_PortResp `protobuf:"bytes,1,opt,name=resp,proto3,oneof" json:"resp,omitempty"`
}

func (x *OptionalPortResp) Reset() {
	*x = OptionalPortResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_portstore_portstore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalPortResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalPortResp) ProtoMessage() {}

func (x *OptionalPortResp) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_portstore_portstore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalPortResp.ProtoReflect.Descriptor instead.
func (*OptionalPortResp) Descriptor() ([]byte, []int) {
	return file_pkg_portstore_portstore_proto_rawDescGZIP(), []int{1}
}

func (x *OptionalPortResp) GetResp() *OptionalPortResp_PortResp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type OptionalPortResp_PortResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coordinates []float32 `protobuf:"fixed32,3,rep,packed,name=coordinates,proto3" json:"coordinates,omitempty"`
	City        string    `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Province    string    `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	Country     string    `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Alias       []string  `protobuf:"bytes,7,rep,name=alias,proto3" json:"alias,omitempty"`
	Regions     []string  `protobuf:"bytes,8,rep,name=regions,proto3" json:"regions,omitempty"`
	Timezone    string    `protobuf:"bytes,9,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Unlocs      []string  `protobuf:"bytes,10,rep,name=unlocs,proto3" json:"unlocs,omitempty"`
	Code        string    `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *OptionalPortResp_PortResp) Reset() {
	*x = OptionalPortResp_PortResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_portstore_portstore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalPortResp_PortResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalPortResp_PortResp) ProtoMessage() {}

func (x *OptionalPortResp_PortResp) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_portstore_portstore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalPortResp_PortResp.ProtoReflect.Descriptor instead.
func (*OptionalPortResp_PortResp) Descriptor() ([]byte, []int) {
	return file_pkg_portstore_portstore_proto_rawDescGZIP(), []int{1, 0}
}

func (x *OptionalPortResp_PortResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OptionalPortResp_PortResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OptionalPortResp_PortResp) GetCoordinates() []float32 {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *OptionalPortResp_PortResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *OptionalPortResp_PortResp) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *OptionalPortResp_PortResp) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *OptionalPortResp_PortResp) GetAlias() []string {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *OptionalPortResp_PortResp) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *OptionalPortResp_PortResp) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *OptionalPortResp_PortResp) GetUnlocs() []string {
	if x != nil {
		return x.Unlocs
	}
	return nil
}

func (x *OptionalPortResp_PortResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_pkg_portstore_portstore_proto protoreflect.FileDescriptor

var file_pkg_portstore_portstore_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x07,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22,
	0xe5, 0x02, 0x0a, 0x10, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x88, 0x01, 0x01, 0x1a, 0x92, 0x02, 0x0a, 0x08, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x32, 0x6b, 0x0a, 0x09, 0x50, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x08, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x28, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x08, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_portstore_portstore_proto_rawDescOnce sync.Once
	file_pkg_portstore_portstore_proto_rawDescData = file_pkg_portstore_portstore_proto_rawDesc
)

func file_pkg_portstore_portstore_proto_rawDescGZIP() []byte {
	file_pkg_portstore_portstore_proto_rawDescOnce.Do(func() {
		file_pkg_portstore_portstore_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_portstore_portstore_proto_rawDescData)
	})
	return file_pkg_portstore_portstore_proto_rawDescData
}

var file_pkg_portstore_portstore_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_portstore_portstore_proto_goTypes = []interface{}{
	(*PortReq)(nil),                   // 0: PortReq
	(*OptionalPortResp)(nil),          // 1: OptionalPortResp
	(*OptionalPortResp_PortResp)(nil), // 2: OptionalPortResp.PortResp
	(*emptypb.Empty)(nil),             // 3: google.protobuf.Empty
}
var file_pkg_portstore_portstore_proto_depIdxs = []int32{
	2, // 0: OptionalPortResp.resp:type_name -> OptionalPortResp.PortResp
	0, // 1: PortStore.PersistPorts:input_type -> PortReq
	0, // 2: PortStore.GetPort:input_type -> PortReq
	3, // 3: PortStore.PersistPorts:output_type -> google.protobuf.Empty
	1, // 4: PortStore.GetPort:output_type -> OptionalPortResp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_portstore_portstore_proto_init() }
func file_pkg_portstore_portstore_proto_init() {
	if File_pkg_portstore_portstore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_portstore_portstore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_portstore_portstore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalPortResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_portstore_portstore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalPortResp_PortResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_portstore_portstore_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_portstore_portstore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_portstore_portstore_proto_goTypes,
		DependencyIndexes: file_pkg_portstore_portstore_proto_depIdxs,
		MessageInfos:      file_pkg_portstore_portstore_proto_msgTypes,
	}.Build()
	File_pkg_portstore_portstore_proto = out.File
	file_pkg_portstore_portstore_proto_rawDesc = nil
	file_pkg_portstore_portstore_proto_goTypes = nil
	file_pkg_portstore_portstore_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PortStoreClient is the client API for PortStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortStoreClient interface {
	PersistPorts(ctx context.Context, opts ...grpc.CallOption) (PortStore_PersistPortsClient, error)
	GetPort(ctx context.Context, in *PortReq, opts ...grpc.CallOption) (*OptionalPortResp, error)
}

type portStoreClient struct {
	cc grpc.ClientConnInterface
}

func NewPortStoreClient(cc grpc.ClientConnInterface) PortStoreClient {
	return &portStoreClient{cc}
}

func (c *portStoreClient) PersistPorts(ctx context.Context, opts ...grpc.CallOption) (PortStore_PersistPortsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PortStore_serviceDesc.Streams[0], "/PortStore/PersistPorts", opts...)
	if err != nil {
		return nil, err
	}
	x := &portStorePersistPortsClient{stream}
	return x, nil
}

type PortStore_PersistPortsClient interface {
	Send(*PortReq) error
	CloseAndRecv() (*emptypb.Empty, error)
	grpc.ClientStream
}

type portStorePersistPortsClient struct {
	grpc.ClientStream
}

func (x *portStorePersistPortsClient) Send(m *PortReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *portStorePersistPortsClient) CloseAndRecv() (*emptypb.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(emptypb.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *portStoreClient) GetPort(ctx context.Context, in *PortReq, opts ...grpc.CallOption) (*OptionalPortResp, error) {
	out := new(OptionalPortResp)
	err := c.cc.Invoke(ctx, "/PortStore/GetPort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortStoreServer is the server API for PortStore service.
type PortStoreServer interface {
	PersistPorts(PortStore_PersistPortsServer) error
	GetPort(context.Context, *PortReq) (*OptionalPortResp, error)
}

// UnimplementedPortStoreServer can be embedded to have forward compatible implementations.
type UnimplementedPortStoreServer struct {
}

func (*UnimplementedPortStoreServer) PersistPorts(PortStore_PersistPortsServer) error {
	return status.Errorf(codes.Unimplemented, "method PersistPorts not implemented")
}
func (*UnimplementedPortStoreServer) GetPort(context.Context, *PortReq) (*OptionalPortResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPort not implemented")
}

func RegisterPortStoreServer(s *grpc.Server, srv PortStoreServer) {
	s.RegisterService(&_PortStore_serviceDesc, srv)
}

func _PortStore_PersistPorts_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PortStoreServer).PersistPorts(&portStorePersistPortsServer{stream})
}

type PortStore_PersistPortsServer interface {
	SendAndClose(*emptypb.Empty) error
	Recv() (*PortReq, error)
	grpc.ServerStream
}

type portStorePersistPortsServer struct {
	grpc.ServerStream
}

func (x *portStorePersistPortsServer) SendAndClose(m *emptypb.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *portStorePersistPortsServer) Recv() (*PortReq, error) {
	m := new(PortReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PortStore_GetPort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PortReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortStoreServer).GetPort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PortStore/GetPort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortStoreServer).GetPort(ctx, req.(*PortReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PortStore",
	HandlerType: (*PortStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPort",
			Handler:    _PortStore_GetPort_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PersistPorts",
			Handler:       _PortStore_PersistPorts_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "pkg/portstore/portstore.proto",
}
